services:
  redis:
    image: "redis:7"
    ports:
      - "6379:6379"
    networks:
      - transcendence_network
  postgres:
    image: "postgres:16"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - transcendence_network
  django:
    build: ./src/backend
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 django_demo.asgi:application"
    env_file:
      - ./.env # Reference to .env in the root directory
    volumes:
      # Probably we don't want to have them as volumes in production
      - ./src/backend:/app
      - /etc/letsencrypt/live/django.sldunit.xyz:/etc/ssl/certs
      - /etc/letsencrypt/archive/django.sldunit.xyz:/etc/letsencrypt/archive/django.sldunit.xyz
    ports:
      - "8000"
    depends_on:
      - redis
      - postgres
    environment:
      - Debug=False
      - REDIS_URL=redis://redis:6379/1
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    networks:
      - transcendence_network
  ngnix:
    build:
      context: ./src
      dockerfile: nginx/Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT}
    volumes:
      - /etc/letsencrypt/live/django.sldunit.xyz:/etc/ssl/certs/
      - /etc/letsencrypt/archive/django.sldunit.xyz:/etc/letsencrypt/archive/django.sldunit.xyz
      - ./src/frontend:/usr/share/nginx/html
    ports:
      # - "80:80"
      # - "443:443"
      # TODO: Let maybe Jonatahan fix this. Overriding the port manually.
      # The override file doesn't work.
      - "8080:80"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - django
    networks:
      - transcendence_network
    command: ["nginx", "-g", "daemon off;"] # Start Nginx in the foreground

networks:
  transcendence_network:
    driver: bridge
