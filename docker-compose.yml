services:
  web:
    build: ./src/backend
    # command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && daphne -e ssl:443:privateKey=/etc/ssl/certs/privkey.pem:certKey=/etc/ssl/certs/fullchain.pem websocket_demo.asgi:application"
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 websocket_demo.asgi:application"

    volumes:
      - ./src/backend:/app
      - /etc/letsencrypt/live/django.sldunit.xyz:/etc/ssl/certs # Mounting SSL symbolic links
      - /etc/letsencrypt/archive/django.sldunit.xyz:/etc/letsencrypt/archive/django.sldunit.xyz # Mount actual certificate files
    ports:
      - "8000"
    depends_on:
      - redis
    environment:
      - Debug=False
      - REDIS_URL=redis://redis:6379/1
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
    networks:
      - django
  ngnix:
    profiles:
      - production # Only build Nginx in the production profile
    image: nginx:${NGINX_VERSION} # Use the version from the .env file
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src/frontend:/usr/share/nginx/html # Frontend files to serve
      - ./src/nginx:/etc/nginx/conf.d
      - /etc/letsencrypt/live/django.sldunit.xyz:/etc/ssl/certs
      - /etc/letsencrypt/archive/django.sldunit.xyz:/etc/letsencrypt/archive/django.sldunit.xyz
    depends_on:
      - web
    networks:
      - django
  redis:
    image: "redis:7"
    ports:
      - "6379:6379"
    networks:
      - django
networks:
  django:
    driver: bridge
